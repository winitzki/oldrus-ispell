			Russian README for package "oldrussian-ispell" (KOI8-C encoding)

		Вводная информац╕я о пакет╒ "oldrussian-ispell"

	Пакет "oldrussian-ispell" -- это набор файлов (словари и файл
аффиксов) для пров╒рки правописан╕я текстов, использующих старую (до 1918
года) русскую ор╛ограф╕ю.
	В настоящее время средства работы со старой русской ор╛ограф╕ей
отсутствуют, и эта программа является первой попыткой такого рода. Пакет
предназначен для программы "ispell" или совм╒стимых с ней и основан на
пакет╒ "rus-ispell" Александра Лебедева (той-же верс╕и), с необходимыми
изм╒нен╕ями. Пакет "oldrussian-ispell" находится сейчас в стад╕и активной
разработки и распространяется свободно по лиценз╕и GPL, в вид╒ комплекта
изм╒нен╕й к пакету "rus-ispell". Пока что с помощью этого пакета было
вычитано шесть книг (общим объёмом в 5 МБ) и требуется дальн╒йшая пров╒рка.

		Установка пакета oldrussian-ispell

	Пакет "oldrussian-ispell" распространяется как набор исправлен╕й к
пакету "rus-ispell". Исходный код совм╒стимой верс╕и пакета
"rus-ispell" прилагается. Распакуйте "oldrus-ispell-XXX.tar.gz", будет
создана новая директор╕я "oldrus-ispell-XXX". Теперь перейдите в эту
директор╕ю и запустите "make unpack". Вс╒ необходимыя д╒йств╕я по
преобразован╕ю rus-ispell будут совершены автоматически. (Если у Вашего
компьютера н╒т свободных 40 МБ памяти, то воспользуйтесь командой "make
LOWMEM=1 unpack".)
	Посл╒ этого запустите "make dict", чтобы собрать словарь с
настройками по умолчан╕ю, или укажите друг╕я настройки (наприм╒р
LOWMEM=1). Файлы словаря "oldrussian.hash" и "oldrussian.aff" будут
собраны и вы можете скомандовать "make install" (как администратор) для
его установки. Если Вам нужно включить дополнительныя настройки,
укажите соотв╒тствующ╕я перем╒нныя для make. В текущую верс╕ю включены
сл╒дующ╕я возможности (команда "make help" перечисляет их):

	Настройка   Назначен╕е

	YO=1        поддержка буквы "ё" (по умолчан╕ю ея н╒т)
	YOYE=1      поддержка букв "е" и "ё" одновременно (д╒лает также YO=1)
	NOFITA=1    отключен╕е буквы "фита" (по умолчан╕ю она есть)
	NOER=1      отключен╕е оконечных "еров" (по умолчан╕ю они есть)
	IZHITSA=1   требовать букву "ижица" (по умолчан╕ю она необязательна)
	CP1251=1    собрать словарь в кодировк╒ CP1251 (по умолчан╕ю KOI8-C)

	Наприм╒р, если Вы запустите "make NOFITA=1 YOYE=1 dict", то будет собрана
верс╕я словаря в кодировк╒ KOI8-C, требующая оконечных твёрдых знаков, не
включающая букву "фита" и позволяющая одновременно пользоваться буквами "е" и
"ё" (т.е., наприм╒р, оба написан╕я "мёдъ" и "медъ" будут допустимы).
	Буква "ижица" использовалась р╒дко, поэтому в словар╒ по умолчан╕ю
разр╒шаются вар╕анты как с нею, так и без нея (она зам╒няется буквой "и").
При указан╕и IZHITSA=1 вар╕анты написан╕й без "ижицы" удаляются из словаря.
	Кодировка KOI8-C является основной, однако им╒ется также и вар╕ант словаря
в кодировк╒ CP1251. Поскольку буквы "ять", "ижица", "фита" отсутствуют в
этой кодировк╒, они зам╒няются югославскими буквами "дье", "тше", и украинским
"оборотным э", похожими на них по начертан╕ю. Скрипт "koi8c2cp1251.sh"
служит для преобразован╕я в этот вар╕ант кодировки CP1251.
	Если Вы хотите получить н╒сколько верс╕й словаря, с разными параметрами,
то Вам придётся каждый раз запускать "make clean" перед "make dict", иначе
результаты могут быть нев╒рными.

		Проч╕я возможности

	Makefile поддерживает сл╒дующ╕я дополнительныя функц╕и работы со словарём. Н╒которыя из них пересобирают словарь и поэтому принимают опц╕и, так╕я, как NOER=1, YO=1 и т.д.
	
	make unpack -- распаковка словаря (выполняется только один раз в самом начал╒ работы с пакетом исходников). Принимает LOWMEM=1.
	make dict -- сборка словаря (*.hash, *.aff). Требует около 30 МБ
памяти и работает медленно (оптимизирует словарь, исключая около 2000
слов). Принимает LOWMEM=1 и тогда требует только около 5 МБ памяти и
работает быстро (но не оптимизирует словаря).
	make install -- установка словаря в /usr/lib/ispell/. Использует результат make dict или принимает LOWMEM=1 и друг╕я опц╕и.
	make deb -- создать пакет Debian (использует результат "make dict"
или принимает опц╕и.)
	make dist -- создать дистрибутив oldrus-ispell-XXX.tar.gz. Принимает LOWMEM=1.
	make distcheck -- пров╒рить дистрибутив на правильность. Принимает LOWMEM=1.
	make hugelist -- создать полный список вс╒х форм вс╒х слов (файл
hugelist.koi)
	make dict.ez2 -- создать спец╕альный запакованный словарь вс╒х форм
для пакета text_n2o.exe (принимает опц╕и)
	make text_n2o.exe -- обновить архив text_n2o.exe (требует dict.ez2 или принимает опц╕и)
	make check_redundant -- создать список излишних слов без флагов
(файл check_redundant). Принимает опц╕и.
	make check_dup -- создать список повторяющихся слов (файл check_dup). Принимает опц╕и.
	make sort -- заново отсортировать вс╒ словари (полезно посл╒ редактирован╕я)
	make new-rus -- создать эквивалентный словарь в современной
ор╛ограф╕и (создаётся поддиректор╕я new-rus/, в которой можно запускать
"make dict", "make hugelist" и т.д.)
	make check_new-rus -- создать список слов из rus-ispell, не
вошедших в словарь new-rus. Принимает LOWMEM=1.
	make clean -- стереть вс╒ производные файлы (оставив только базовые
исходники)

		Дополнительныя программы

	В дополнен╕е к словарю, в комплект oldrus-ispell включены н╒которые
служебные скрипты: affixize, esq, rus_new2old, rus_old2new, showaffix,
sortkoi8c, update-dicts и т.д. Файлы esq, excludelines, rus_* и sortkoi8c
необходимы для сборки пакета из исходников; файлы affixize и showaffix
помогают при пров╒рк╒ таблиц аффиксов; наконец, скрипт update-dicts
облегчает обновлен╕е словарей до очередной верс╕и базоваго пакета rus-ispell
посл╒ того, как А. Лебедев выпускает её в св╒т. Минимальная документац╕я
вписана в эти скрипты. Для работы ispell с собранным словарём эти
дополнительныя программы не требуются.
	Им╒ется возможность создавать словарь новой ор╛ограф╕и, соотв╒тствующ╕й
данному вар╕анту словаря старой ор╛ограф╕и. Это полезно для сравнен╕я с
базовым словарём А. Лебедева, поскольку в данном вар╕ант╒ внесены н╒которыя
существенныя изм╒нен╕я. Исходники словаря новой ор╛ограф╕и порождаются в
директор╕и "new-rus" командой "make new-rus". Собирать новый словарь нужно как
обычно с помощью make-команд.
	С помощью программы "text_new2old.pl" можно облегчить перевод текстов
(пословно) из новой ор╛ограф╕и в старую. Эта программа использует спец╕альный
словарный файла hugelistA.koi, который создаётся командой "make hugelistA.koi".
При неоднозначности перевода (наприм╒р, "тем" - "т╒м") можно получить вс╒
вар╕анты (см. руководство в текст╒ программы). Программу "text_new2old.pl"
можно запускать также и в M$ Windows -- для этого служит самораспаковывающ╕йся
архив "text_n2o.exe". Краткая справка включена в файл "text_new2old.pl".

		Отлич╕я от пакета "rus-ispell" Александра Лебедева
	
	Пакет "oldrussian-ispell" отличается от исходнаго пакета "rus-ispell" в
н╒скольких отношен╕ях: поддержка стараго правописан╕я, расширенныя
возможности по создан╕ю вар╕антов словарей, и расширенный состав слов. При
работ╒ над словарём я сл╒дую принципу всем╒рнаго расширен╕я допустимаго набора
слов и форм, включая р╒дк╕я формы, для облегчен╕я пров╒рки правописан╕я. В
противоположность этому, А. Лебедев придерживается точки зр╒н╕я, что для
облегчен╕я пров╒рки правописан╕я необходимо сокращать набор слов и форм до
наибол╒е часто употребительных.

		Старая ор╛ограф╕я в 21 в╒к╒, или Как пишется "Гулаг"?

	Составлен╕е словаря старой ор╛ограф╕и поставило проблему правописан╕я новых
слов. Может показаться странным анахронизмом написан╕е таких поздн╒йших слов,
как "чекист" или "полиэтилен", по старым правилам, однако это вопрос вкуса. Я
придерживался гипотетическаго естественнаго развит╕я языка: ор╛ограф╕я вс╒х
новых слов представлена в словар╒ так, как если бы реформы правописан╕я 1917 г.
не произошло и новыя слова добавлялись бы в русск╕й язык согласно прежним
правилам словообразован╕я. Так, наприм╒р, "ять" пишется в опред╒лённых корнях,
суффиксах и окончан╕ях, "фита" -- только в словах греческаго происхожден╕я и
т.д. Таким образом, получаем "чёрный п╕ар в оффшор╒", "дилер дигитальнаго
декодера" и т.п.

		Представлен╕е старой ор╛ограф╕и

	Старое русское правописан╕е отличается от современнаго в н╒скольких
пунктах: во-первых, налич╕ем "устар╒вших" букв "╡╒", "╪╛" и "╤╕" (в словар╒ он╒
кодируются по предлагаемой схем╒ KOI8-C); во-вторых, употребляются "еры"
(твёрдые знаки) посл╒ конечных согласных и иногда в середин╒ слов; в-третьих,
изм╒нились н╒которыя падежныя формы существительных и прилагательных;
в-четвёртых, изм╒нилось слитное или разд╒льное написан╕е н╒которых слов. Буква
"ё" использовалась р╒дко, так как написан╕е буквы "ять" устраняло н╒которые
важные случаи неоднозначности (наприм╒р, "всё" - "вс╒"), но были призывы к ея
использован╕ю. Н╒которые тексты используют "промежуточный" вар╕ант ор╛ограф╕и,
без оконечных "еров" или без "фиты". Поэтому буквы "ё", "╒" и оконечные "еры"
могут быть по желан╕ю исключены из словаря при его компиляц╕и.
	Для перехода к старому правописан╕ю было необходимо изм╒нить как
файл словаря, так и файл аффиксов. Новая ор╛ограф╕я проще старой
(конечно, ц╒ной потери ясности морфолог╕и), и поэтому исправить текст со
стараго правописан╕я на новое легче, ч╒м перейти обратно к старому.
Программы "rus_old2new.pl" и "rus_new2old.pl" выполняют значительную
рутинную часть этой работы. Была изм╒нена и программа сортировки
"sortkoi8c", которая теперь включает и устар╒вш╕е буквы.
	Из-за необходимости расширить алфавит пришлось отказаться от поддержки
многих кодировок и создать KOI8-C. (Информац╕я об этом предлагаемом расширен╕и
KOI8-R, а также о раскладках клав╕атуры и шрифтах, находятся на с╒ти по адресу
"http://www.geocities.com/CapeCanaveral/Lab/5735/1/koi8-extended.html".)
По-видимому, Микрософт не собирается включать дополнительныя буквы ни в свои
таблицы кодировок, ни в стандартные шрифты, и стало быть автоматическая
поддержка стараго правописан╕я в DOS, Windows (равно как и Macintosh) мало
в╒роятна. (Ять и фита им╒ются только в шрифт╒ Palatino от Windows 2000.)
Однако, в системах Unix работа с текстами в старой ор╛ограф╕и возможна уже
сейчас, поскольку нов╒йш╕е шрифты кириллицы для LaTeXа уже содержат вс╒
необходимыя буквы, и довольно просто составить таблицу ввода кириллицы в
кодировк╒ KOI8-C. Полный набор экранных шрифтов в этой кодировк╒ им╒ется в
пакет╒ "xcyr" верс╕и 2.3 или нов╒е (также по указанному выше адресу), а
совм╒стимость с существующим программным обезпечен╕ем достигается простым
переименован╕ем кодировки в KOI8-R.
	Кром╒ кодировки KOI8-C, словарь можно перевести в вар╕ант CP-1251, в
котором ять представлен югославской "дье" (0x80, 0x90), "╛" и "╕" --
украинскими буквами "э оборотное" (╢, ╓) и "╕". По начертан╕ю эти замены
достаточно близки. С помощью команд "make CP1251=1 dict" и т.п. словарь
автоматически перекодируется в такой (нестандартный) вар╕ант кодировки CP-1251.
Достоинство этого метода кодировки в том, что текст можно читать на стандартной
системе Windows без дополнительных настроек.

--
	Серг╒й Виницк╕й. Адрес для писем -- см. на с╒ти.
	January 2001.
